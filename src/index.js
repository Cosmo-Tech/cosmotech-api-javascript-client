/**
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AnalysisParameter from './model/AnalysisParameter';
import AnalysisParameterGroup from './model/AnalysisParameterGroup';
import AnalysisResourceStorage from './model/AnalysisResourceStorage';
import Connector from './model/Connector';
import ConnectorParameter from './model/ConnectorParameter';
import ConnectorParameterGroup from './model/ConnectorParameterGroup';
import Dataset from './model/Dataset';
import DatasetCompatibility from './model/DatasetCompatibility';
import DatasetConnector from './model/DatasetConnector';
import Organization from './model/Organization';
import OrganizationUser from './model/OrganizationUser';
import Simulator from './model/Simulator';
import SimulatorAnalysis from './model/SimulatorAnalysis';
import User from './model/User';
import UserDetails from './model/UserDetails';
import UserDetailsAllOf from './model/UserDetailsAllOf';
import UserOrganization from './model/UserOrganization';
import Validator from './model/Validator';
import ValidatorRun from './model/ValidatorRun';
import ConnectorApi from './api/ConnectorApi';
import DatasetApi from './api/DatasetApi';
import OrganizationApi from './api/OrganizationApi';
import SimulatorApi from './api/SimulatorApi';
import UserApi from './api/UserApi';
import ValidatorApi from './api/ValidatorApi';


/**
* Cosmo Tech Platform API client.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CosmotechApi = require('index'); // See note below*.
* var xxxSvc = new CosmotechApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CosmotechApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CosmotechApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CosmotechApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.1-SNAPSHOT
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AnalysisParameter model constructor.
     * @property {module:model/AnalysisParameter}
     */
    AnalysisParameter,

    /**
     * The AnalysisParameterGroup model constructor.
     * @property {module:model/AnalysisParameterGroup}
     */
    AnalysisParameterGroup,

    /**
     * The AnalysisResourceStorage model constructor.
     * @property {module:model/AnalysisResourceStorage}
     */
    AnalysisResourceStorage,

    /**
     * The Connector model constructor.
     * @property {module:model/Connector}
     */
    Connector,

    /**
     * The ConnectorParameter model constructor.
     * @property {module:model/ConnectorParameter}
     */
    ConnectorParameter,

    /**
     * The ConnectorParameterGroup model constructor.
     * @property {module:model/ConnectorParameterGroup}
     */
    ConnectorParameterGroup,

    /**
     * The Dataset model constructor.
     * @property {module:model/Dataset}
     */
    Dataset,

    /**
     * The DatasetCompatibility model constructor.
     * @property {module:model/DatasetCompatibility}
     */
    DatasetCompatibility,

    /**
     * The DatasetConnector model constructor.
     * @property {module:model/DatasetConnector}
     */
    DatasetConnector,

    /**
     * The Organization model constructor.
     * @property {module:model/Organization}
     */
    Organization,

    /**
     * The OrganizationUser model constructor.
     * @property {module:model/OrganizationUser}
     */
    OrganizationUser,

    /**
     * The Simulator model constructor.
     * @property {module:model/Simulator}
     */
    Simulator,

    /**
     * The SimulatorAnalysis model constructor.
     * @property {module:model/SimulatorAnalysis}
     */
    SimulatorAnalysis,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserDetails model constructor.
     * @property {module:model/UserDetails}
     */
    UserDetails,

    /**
     * The UserDetailsAllOf model constructor.
     * @property {module:model/UserDetailsAllOf}
     */
    UserDetailsAllOf,

    /**
     * The UserOrganization model constructor.
     * @property {module:model/UserOrganization}
     */
    UserOrganization,

    /**
     * The Validator model constructor.
     * @property {module:model/Validator}
     */
    Validator,

    /**
     * The ValidatorRun model constructor.
     * @property {module:model/ValidatorRun}
     */
    ValidatorRun,

    /**
    * The ConnectorApi service constructor.
    * @property {module:api/ConnectorApi}
    */
    ConnectorApi,

    /**
    * The DatasetApi service constructor.
    * @property {module:api/DatasetApi}
    */
    DatasetApi,

    /**
    * The OrganizationApi service constructor.
    * @property {module:api/OrganizationApi}
    */
    OrganizationApi,

    /**
    * The SimulatorApi service constructor.
    * @property {module:api/SimulatorApi}
    */
    SimulatorApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi,

    /**
    * The ValidatorApi service constructor.
    * @property {module:api/ValidatorApi}
    */
    ValidatorApi
};

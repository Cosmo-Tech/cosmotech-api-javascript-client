/**
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SimulationContainerLog from './SimulationContainerLog';

/**
 * The SimulationContainerLogs model module.
 * @module model/SimulationContainerLogs
 * @version 0.0.1-SNAPSHOT
 */
class SimulationContainerLogs {
    /**
     * Constructs a new <code>SimulationContainerLogs</code>.
     * logs for a given container
     * @alias module:model/SimulationContainerLogs
     */
    constructor() { 
        
        SimulationContainerLogs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SimulationContainerLogs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SimulationContainerLogs} obj Optional instance to populate.
     * @return {module:model/SimulationContainerLogs} The populated <code>SimulationContainerLogs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SimulationContainerLogs();

            if (data.hasOwnProperty('containerId')) {
                obj['containerId'] = ApiClient.convertToType(data['containerId'], 'String');
            }
            if (data.hasOwnProperty('computer')) {
                obj['computer'] = ApiClient.convertToType(data['computer'], 'String');
            }
            if (data.hasOwnProperty('logs')) {
                obj['logs'] = ApiClient.convertToType(data['logs'], [SimulationContainerLog]);
            }
            if (data.hasOwnProperty('textLog')) {
                obj['textLog'] = ApiClient.convertToType(data['textLog'], 'String');
            }
        }
        return obj;
    }


}

/**
 * container ID for log source as seen by Docker engine
 * @member {String} containerId
 */
SimulationContainerLogs.prototype['containerId'] = undefined;

/**
 * computer/node that's generating the log
 * @member {String} computer
 */
SimulationContainerLogs.prototype['computer'] = undefined;

/**
 * the list of container logs in structured format
 * @member {Array.<module:model/SimulationContainerLog>} logs
 */
SimulationContainerLogs.prototype['logs'] = undefined;

/**
 * the plain text log if plainText option has been set
 * @member {String} textLog
 */
SimulationContainerLogs.prototype['textLog'] = undefined;






export default SimulationContainerLogs;


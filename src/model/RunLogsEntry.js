/**
 * Cosmo Tech Platform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 4.0.3-SNAPSHOT
 * Contact: platform@cosmotech.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RunLogsEntry model module.
 * @module model/RunLogsEntry
 * @version 4.0.3-SNAPSHOT
 */
class RunLogsEntry {
    /**
     * Constructs a new <code>RunLogsEntry</code>.
     * single run log entry
     * @alias module:model/RunLogsEntry
     * @param line {String} log line data
     */
    constructor(line) { 
        
        RunLogsEntry.initialize(this, line);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, line) { 
        obj['line'] = line;
    }

    /**
     * Constructs a <code>RunLogsEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RunLogsEntry} obj Optional instance to populate.
     * @return {module:model/RunLogsEntry} The populated <code>RunLogsEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RunLogsEntry();

            if (data.hasOwnProperty('line')) {
                obj['line'] = ApiClient.convertToType(data['line'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RunLogsEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RunLogsEntry</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RunLogsEntry.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['line'] && !(typeof data['line'] === 'string' || data['line'] instanceof String)) {
            throw new Error("Expected the field `line` to be a primitive type in the JSON string but got " + data['line']);
        }

        return true;
    }


}

RunLogsEntry.RequiredProperties = ["line"];

/**
 * log line data
 * @member {String} line
 */
RunLogsEntry.prototype['line'] = undefined;






export default RunLogsEntry;


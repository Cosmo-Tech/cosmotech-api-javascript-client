/**
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import User from './User';
import UserDetailsAllOf from './UserDetailsAllOf';
import UserOrganization from './UserOrganization';

/**
 * The UserDetails model module.
 * @module model/UserDetails
 * @version 0.0.1-SNAPSHOT
 */
class UserDetails {
    /**
     * Constructs a new <code>UserDetails</code>.
     * @alias module:model/UserDetails
     * @implements module:model/User
     * @implements module:model/UserDetailsAllOf
     * @param name {String} the User name
     */
    constructor(name) { 
        User.initialize(this, name);UserDetailsAllOf.initialize(this);
        UserDetails.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>UserDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserDetails} obj Optional instance to populate.
     * @return {module:model/UserDetails} The populated <code>UserDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserDetails();
            User.constructFromObject(data, obj);
            UserDetailsAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('organizations')) {
                obj['organizations'] = ApiClient.convertToType(data['organizations'], [UserOrganization]);
            }
        }
        return obj;
    }


}

/**
 * the User unique identifier
 * @member {String} id
 */
UserDetails.prototype['id'] = undefined;

/**
 * the User name
 * @member {String} name
 */
UserDetails.prototype['name'] = undefined;

/**
 * @member {Array.<module:model/UserOrganization>} organizations
 */
UserDetails.prototype['organizations'] = undefined;


// Implement User interface:
/**
 * the User unique identifier
 * @member {String} id
 */
User.prototype['id'] = undefined;
/**
 * the User name
 * @member {String} name
 */
User.prototype['name'] = undefined;
// Implement UserDetailsAllOf interface:
/**
 * @member {Array.<module:model/UserOrganization>} organizations
 */
UserDetailsAllOf.prototype['organizations'] = undefined;




export default UserDetails;


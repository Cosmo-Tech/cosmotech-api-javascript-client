/**
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SimulationSearch model module.
 * @module model/SimulationSearch
 * @version 0.0.1-SNAPSHOT
 */
class SimulationSearch {
    /**
     * Constructs a new <code>SimulationSearch</code>.
     * the search options
     * @alias module:model/SimulationSearch
     */
    constructor() { 
        
        SimulationSearch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SimulationSearch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SimulationSearch} obj Optional instance to populate.
     * @return {module:model/SimulationSearch} The populated <code>SimulationSearch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SimulationSearch();

            if (data.hasOwnProperty('solutionId')) {
                obj['solutionId'] = ApiClient.convertToType(data['solutionId'], 'String');
            }
            if (data.hasOwnProperty('runTemplateId')) {
                obj['runTemplateId'] = ApiClient.convertToType(data['runTemplateId'], 'String');
            }
            if (data.hasOwnProperty('workspaceId')) {
                obj['workspaceId'] = ApiClient.convertToType(data['workspaceId'], 'String');
            }
            if (data.hasOwnProperty('scenarioId')) {
                obj['scenarioId'] = ApiClient.convertToType(data['scenarioId'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
            }
            if (data.hasOwnProperty('ownerId')) {
                obj['ownerId'] = ApiClient.convertToType(data['ownerId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * the Solution Id to search
 * @member {String} solutionId
 */
SimulationSearch.prototype['solutionId'] = undefined;

/**
 * the Solution Analysis Id to search
 * @member {String} runTemplateId
 */
SimulationSearch.prototype['runTemplateId'] = undefined;

/**
 * the Workspace Id to search
 * @member {String} workspaceId
 */
SimulationSearch.prototype['workspaceId'] = undefined;

/**
 * the Scenario Id to search
 * @member {String} scenarioId
 */
SimulationSearch.prototype['scenarioId'] = undefined;

/**
 * the state to search
 * @member {String} state
 */
SimulationSearch.prototype['state'] = undefined;

/**
 * the Cosmo Tech compute cluster Job Id to search
 * @member {String} jobId
 */
SimulationSearch.prototype['jobId'] = undefined;

/**
 * the owner Id to search
 * @member {String} ownerId
 */
SimulationSearch.prototype['ownerId'] = undefined;






export default SimulationSearch;


/**
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WorkspaceUser from './WorkspaceUser';
import WorkspaceUserDetailsAllOf from './WorkspaceUserDetailsAllOf';

/**
 * The WorkspaceUserDetails model module.
 * @module model/WorkspaceUserDetails
 * @version 0.0.1-SNAPSHOT
 */
class WorkspaceUserDetails {
    /**
     * Constructs a new <code>WorkspaceUserDetails</code>.
     * @alias module:model/WorkspaceUserDetails
     * @implements module:model/WorkspaceUser
     * @implements module:model/WorkspaceUserDetailsAllOf
     * @param id {String} the User id
     * @param role {module:model/WorkspaceUserDetails.RoleEnum} the User role
     */
    constructor(id, role) { 
        WorkspaceUser.initialize(this, id, role);WorkspaceUserDetailsAllOf.initialize(this);
        WorkspaceUserDetails.initialize(this, id, role);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, role) { 
        obj['id'] = id;
        obj['role'] = role;
    }

    /**
     * Constructs a <code>WorkspaceUserDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkspaceUserDetails} obj Optional instance to populate.
     * @return {module:model/WorkspaceUserDetails} The populated <code>WorkspaceUserDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkspaceUserDetails();
            WorkspaceUser.constructFromObject(data, obj);
            WorkspaceUserDetailsAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('organizationId')) {
                obj['organizationId'] = ApiClient.convertToType(data['organizationId'], 'String');
            }
            if (data.hasOwnProperty('organizationRoles')) {
                obj['organizationRoles'] = ApiClient.convertToType(data['organizationRoles'], ['String']);
            }
            if (data.hasOwnProperty('workspaceId')) {
                obj['workspaceId'] = ApiClient.convertToType(data['workspaceId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * the User id
 * @member {String} id
 */
WorkspaceUserDetails.prototype['id'] = undefined;

/**
 * the User name
 * @member {String} name
 */
WorkspaceUserDetails.prototype['name'] = undefined;

/**
 * the User role
 * @member {module:model/WorkspaceUserDetails.RoleEnum} role
 */
WorkspaceUserDetails.prototype['role'] = undefined;

/**
 * the Organization Id context
 * @member {String} organizationId
 */
WorkspaceUserDetails.prototype['organizationId'] = undefined;

/**
 * the Organizations roles for the User
 * @member {Array.<String>} organizationRoles
 */
WorkspaceUserDetails.prototype['organizationRoles'] = undefined;

/**
 * the Workspace Id context
 * @member {String} workspaceId
 */
WorkspaceUserDetails.prototype['workspaceId'] = undefined;


// Implement WorkspaceUser interface:
/**
 * the User id
 * @member {String} id
 */
WorkspaceUser.prototype['id'] = undefined;
/**
 * the User name
 * @member {String} name
 */
WorkspaceUser.prototype['name'] = undefined;
/**
 * the User role
 * @member {module:model/WorkspaceUser.RoleEnum} role
 */
WorkspaceUser.prototype['role'] = undefined;
// Implement WorkspaceUserDetailsAllOf interface:
/**
 * the Organization Id context
 * @member {String} organizationId
 */
WorkspaceUserDetailsAllOf.prototype['organizationId'] = undefined;
/**
 * the Organizations roles for the User
 * @member {Array.<String>} organizationRoles
 */
WorkspaceUserDetailsAllOf.prototype['organizationRoles'] = undefined;
/**
 * the Workspace Id context
 * @member {String} workspaceId
 */
WorkspaceUserDetailsAllOf.prototype['workspaceId'] = undefined;



/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
WorkspaceUserDetails['RoleEnum'] = {

    /**
     * value: "Admin"
     * @const
     */
    "Admin": "Admin",

    /**
     * value: "User"
     * @const
     */
    "User": "User",

    /**
     * value: "Viewer"
     * @const
     */
    "Viewer": "Viewer"
};



export default WorkspaceUserDetails;


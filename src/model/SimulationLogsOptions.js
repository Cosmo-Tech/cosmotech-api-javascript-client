/**
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SimulationLogsOptions model module.
 * @module model/SimulationLogsOptions
 * @version 0.0.1-SNAPSHOT
 */
class SimulationLogsOptions {
    /**
     * Constructs a new <code>SimulationLogsOptions</code>.
     * the simulation logs options
     * @alias module:model/SimulationLogsOptions
     */
    constructor() { 
        
        SimulationLogsOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SimulationLogsOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SimulationLogsOptions} obj Optional instance to populate.
     * @return {module:model/SimulationLogsOptions} The populated <code>SimulationLogsOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SimulationLogsOptions();

            if (data.hasOwnProperty('containerIds')) {
                obj['containerIds'] = ApiClient.convertToType(data['containerIds'], ['String']);
            }
            if (data.hasOwnProperty('plainText')) {
                obj['plainText'] = ApiClient.convertToType(data['plainText'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * the list of container Id to get the log for
 * @member {Array.<String>} containerIds
 */
SimulationLogsOptions.prototype['containerIds'] = undefined;

/**
 * whether or not to return the log in plain text instead of structured form
 * @member {Boolean} plainText
 */
SimulationLogsOptions.prototype['plainText'] = undefined;






export default SimulationLogsOptions;


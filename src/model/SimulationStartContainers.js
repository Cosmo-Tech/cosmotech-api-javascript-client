/**
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SimulationContainers from './SimulationContainers';

/**
 * The SimulationStartContainers model module.
 * @module model/SimulationStartContainers
 * @version 0.0.1-SNAPSHOT
 */
class SimulationStartContainers {
    /**
     * Constructs a new <code>SimulationStartContainers</code>.
     * the parameters to run directly containers
     * @alias module:model/SimulationStartContainers
     */
    constructor() { 
        
        SimulationStartContainers.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SimulationStartContainers</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SimulationStartContainers} obj Optional instance to populate.
     * @return {module:model/SimulationStartContainers} The populated <code>SimulationStartContainers</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SimulationStartContainers();

            if (data.hasOwnProperty('nodeLabel')) {
                obj['nodeLabel'] = ApiClient.convertToType(data['nodeLabel'], 'String');
            }
            if (data.hasOwnProperty('initContainers')) {
                obj['initContainers'] = ApiClient.convertToType(data['initContainers'], [SimulationContainers]);
            }
            if (data.hasOwnProperty('mainContainer')) {
                obj['mainContainer'] = SimulationContainers.constructFromObject(data['mainContainer']);
            }
        }
        return obj;
    }


}

/**
 * the node label request
 * @member {String} nodeLabel
 */
SimulationStartContainers.prototype['nodeLabel'] = undefined;

/**
 * the list of init containers
 * @member {Array.<module:model/SimulationContainers>} initContainers
 */
SimulationStartContainers.prototype['initContainers'] = undefined;

/**
 * @member {module:model/SimulationContainers} mainContainer
 */
SimulationStartContainers.prototype['mainContainer'] = undefined;






export default SimulationStartContainers;


/**
 * Cosmo Tech Plaform API
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 1.1.3-SNAPSHOT
 * Contact: platform@cosmotech.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CosmotechApi);
  }
}(this, function(expect, CosmotechApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CosmotechApi.Connector();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Connector', function() {
    it('should create an instance of Connector', function() {
      // uncomment below and update the code to test Connector
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be.a(CosmotechApi.Connector);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

    it('should have the property key (base name: "key")', function() {
      // uncomment below and update the code to test the property key
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

    it('should have the property repository (base name: "repository")', function() {
      // uncomment below and update the code to test the property repository
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

    it('should have the property ownerId (base name: "ownerId")', function() {
      // uncomment below and update the code to test the property ownerId
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

    it('should have the property azureManagedIdentity (base name: "azureManagedIdentity")', function() {
      // uncomment below and update the code to test the property azureManagedIdentity
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

    it('should have the property azureAuthenticationWithCustomerAppRegistration (base name: "azureAuthenticationWithCustomerAppRegistration")', function() {
      // uncomment below and update the code to test the property azureAuthenticationWithCustomerAppRegistration
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

    it('should have the property ioTypes (base name: "ioTypes")', function() {
      // uncomment below and update the code to test the property ioTypes
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

    it('should have the property parameterGroups (base name: "parameterGroups")', function() {
      // uncomment below and update the code to test the property parameterGroups
      //var instance = new CosmotechApi.Connector();
      //expect(instance).to.be();
    });

  });

}));
